loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-4, 2, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
res <- SG(c(-10, 2, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-10, 2, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-5, 2, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-5, 4, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
res <- SG(c(-2, 4, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-2, 4, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-5, 4, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-5, 8, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
# Plot estimates against true values and initial values
initpar_tibble <- tibble(initpar = initpar, Parameter = c("alpha", "beta", "gamma", "rho"))
summary(loglogis_SG_tracer) %>% as_tibble() %>% rename("alpha" = par.1, "beta" = par.2, "gamma" = par.3, "rho" = par.4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
# Convergence for different starting values of alpha, beta
loglogis_SG_tracer <- tracer("par", N = 0)
par_init <- expand.grid(
alpha = c(-1.5,-1,-0.5, 1, 1.5, 2, 4, 6),
beta = c(-2, -1, -0.5, 0.5, 2, 4, 5)
)
par_init
par_init <- expand.grid(
alpha = c(-1.5,-1,-0.5, 1, 1.5, 2, 4, 6),
beta = c(-2, -1, -0.5, 0.5, 2, 4, 5)
) %>% as.matrix()
par_init
loglogis_SG_tracer <- tracer("par", N = 0)
set.seed(1)
paths <- vector("list", nrow(par_init))
paths
par_init
par_init[1,1]
par_init[1,2]
par_init[2,2]
SG(c(par_init[i,1], par_init[i,2], initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer
)
loglogis_SG_tracer <- tracer("par", N = 0)
SG(c(par_init[i,1], par_init[i,2], initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
loglogis_SG_tracer <- tracer("par", N = 0)
SG(c(par_init[1,1], par_init[1,2], initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
summary(loglogis_SG_tracer)
# Convergence for different starting values of alpha, beta
loglogis_SG_tracer <- tracer("par", N = 0)
par_init <- expand.grid(
alpha = c(-1.5,-1,-0.5, 1, 1.5, 2, 4, 6),
beta = c(-2, -1, -0.5, 0.5, 2, 4, 5)
) %>% as.matrix()
set.seed(1)
paths <- vector("list", nrow(par_init))
for(i in 1:nrow(par_init)){
SG(c(par_init[i,1], par_init[i,2], initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
paths[[i]] <- summary(loglogis_SG_tracer)
loglogis_SG_tracer$clear()
}
paths
paths[[1]]
paths[[1]] %>%  as_tibble()
paths[[1]] %>%  as_tibble(.name_repair = unique)
?as_tibble
paths[[1]] %>%  as_tibble(.name_repair = "unique")
paths[[1]] %>%  as_tibble(.name_repair = "unique")  %>% rename("alpha" = par.alpha, "beta" = par.beta, "gamma" = par....3, "rho" = par....4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
paths[[5]] %>%  as_tibble(.name_repair = "unique")  %>% rename("alpha" = par.alpha, "beta" = par.beta, "gamma" = par....3, "rho" = par....4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
paths[[10]] %>%  as_tibble(.name_repair = "unique")  %>% rename("alpha" = par.alpha, "beta" = par.beta, "gamma" = par....3, "rho" = par....4, "time" = .time) %>%
pivot_longer(cols = -time, names_to = "Parameter", values_to = "Estimate") %>%
ggplot(aes(x = time, y = Estimate, col = Parameter)) + geom_line(size = 1) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed", size = 1) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
unlist(paths)
unlist(paths) %>% as_tibble()
paths
loglogis_SG_tracer <- tracer("par", N = 0)
res <- SG(c(-5, 8, initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
summary(loglogis_SG_tracer) %>% tibble(., alphainit = par_init[i,1], betainit = par_init[i,2])
# Convergence for different starting values of alpha, beta
loglogis_SG_tracer <- tracer("par", N = 0)
par_init <- expand.grid(
alpha = c(-1.5,-1,-0.5, 1, 1.5, 2, 4, 6),
beta = c(-2, -1, -0.5, 0.5, 2, 4, 5)
) %>% as.matrix()
set.seed(1)
paths <- vector("list", nrow(par_init))
for(i in 1:nrow(par_init)){
SG(c(par_init[i,1], par_init[i,2], initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
paths[[i]] <- summary(loglogis_SG_tracer) %>% tibble(., alphainit = par_init[i,1], betainit = par_init[i,2])
loglogis_SG_tracer$clear()
}
# Convergence for different starting values of alpha, beta
loglogis_SG_tracer <- tracer("par", N = 0)
par_init <- expand.grid(
alpha = c(-1.5,-1,-0.5, 1, 1.5, 2, 4, 6),
beta = c(-2, -1, -0.5, 0.5, 2, 4, 5)
) %>% as.matrix()
set.seed(1)
paths <- vector("list", nrow(par_init))
for(i in 1:nrow(par_init)){
SG(c(par_init[i,1], par_init[i,2], initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
paths[[i]] <- summary(loglogis_SG_tracer) %>% tibble(., alphainit = par_init[i,1], betainit = par_init[i,2], .name_repair = "unique")
loglogis_SG_tracer$clear()
}
paths
bind_rows(paths)
bind_rows(paths) %>% select(-c("par....3", "par....4"))
bind_rows(paths) %>% select(-c("par....3", "par....4")) %>% rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time)
bind_rows(paths) %>% select(-c("par....3", "par....4")) %>% rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
%>% mutate(alphinit = as.factor(alphainit), betainit = as.factor(betainit))
bind_rows(paths) %>% select(-c("par....3", "par....4")) %>% rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphinit = as.factor(alphainit), betainit = as.factor(betainit))
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>% rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphinit = as.factor(alphainit), betainit = as.factor(betainit))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size) + facet_grid(betainit~alphainit)
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) + facet_grid(betainit~alphainit)
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) + facet_wrap(betainit~alphainit)
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) + geom_hline(aes(yintercept = alpha0)) +
facet_wrap(betainit~alphainit)
loglogis_SG_tracer <- tracer("par", N = 0)
par_init <- expand.grid(
alpha = c(-4,-2, 0, 1, 1.5, 2, 5, 8),
beta = c(-4, -2, -0.5, 0.5, 2, 4, 8)
) %>% as.matrix()
set.seed(1)
paths <- vector("list", nrow(par_init))
for(i in 1:nrow(par_init)){
SG(c(par_init[i,1], par_init[i,2], initpar[3], initpar[4]),
N = N,
gamma = rate,
cb = loglogis_SG_tracer$tracer)
paths[[i]] <- summary(loglogis_SG_tracer) %>% tibble(., alphainit = par_init[i,1], betainit = par_init[i,2], .name_repair = "unique")
loglogis_SG_tracer$clear()
}
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>% rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphinit = as.factor(alphainit), betainit = as.factor(betainit))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit)
paths_tibble %>% ggplot(aes(x = time, y = beta)) + geom_line(size = 1) +
geom_hline(aes(yintercept = beta0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit)
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text.x = element_text(face = "bold", size = 12))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12))
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time)
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12))
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphinit = as.factor(alphainit), betainit = as.factor(betainit))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = round(seq(min(alpha), max(alpha), by = 0.5),1))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = pretty(alpha, n = 10))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks =c(-3,0,4))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,-1.5,0,1.5,3,4.5,6))
paths_tibble %>% ggplot(aes(x = time, y = beta)) + geom_line(size = 1) +
geom_hline(aes(yintercept = beta0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,-1.5,0,1.5,3,4.5,6))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,-6, by = 1.5))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,6, by = 1.5))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,6, by = 3))
paths_tibble %>% ggplot(aes(x = time, y = beta)) + geom_line(size = 1) +
geom_hline(aes(yintercept = beta0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,6, by = 3))
paths_tibble %>% ggplot(aes(x = time, y = alpha)) + geom_line(size = 1) +
geom_hline(aes(yintercept = alpha0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,6, by = 3))
paths_tibble %>% ggplot(aes(x = time, y = beta)) + geom_line(size = 1) +
geom_hline(aes(yintercept = beta0), col = "red", linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,6, by = 3))
paths_tibble
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphinit = as.factor(alphainit), betainit = as.factor(betainit))
paths_tibble
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alpha = as.factor(alphainit), betainit = as.factor(betainit))
paths_tibble
paths_tibble %>% pivot_longer(-(time,alphainit, betainit))
paths_tibble %>% pivot_longer(-c(time,alphainit, betainit))
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphainit = as.factor(alphainit), betainit = as.factor(betainit))
paths_tibble
paths_tibble %>% pivot_longer(-c(time,alphainit, betainit))
paths_tibble %>% pivot_longer(-c(time,alphainit, betainit)) %>% ggplot(aes(x = time, y = value)) + geom_line(size = 1) + facet_grid(betainit~alphainit)
paths_tibble %>% pivot_longer(-c(time,alphainit, betainit)) %>% ggplot(aes(x = time, y = value, col = name)) + geom_line(size = 1) + facet_grid(betainit~alphainit)
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphainit = as.factor(alphainit), betainit = as.factor(betainit)) %>%
paths_tibble %>% pivot_longer(-c(time,alphainit, betainit))
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphainit = as.factor(alphainit), betainit = as.factor(betainit)) %>%
pivot_longer(-c(time,alphainit, betainit))
paths_tibble %>% ggplot(aes(x = time, y = value, col = name)) + geom_line(size = 1) + facet_grid(betainit~alphainit)
paths_tibble <- bind_rows(paths) %>% select(-c("par....3", "par....4")) %>%
rename("alpha" = par.alpha, "beta" = par.beta, "time" = .time) %>%
mutate(alphainit = as.factor(alphainit), betainit = as.factor(betainit)) %>%
pivot_longer(-c(time,alphainit, betainit), names_to = "Parameter")
paths_tibble %>% ggplot(aes(x = time, y = value, col = name)) + geom_line(size = 1) +
facet_grid(betainit~alphainit)
paths_tibble %>% ggplot(aes(x = time, y = value, col = Parameter)) + geom_line(size = 1) +
facet_grid(betainit~alphainit)
trueval_tibble
trueval_tibble$Parameter[1:2]
trueval_tibble$Value[1:2]
paths_tibble %>% ggplot(aes(x = time, y = value, col = Parameter)) + geom_line(size = 1) +
facet_grid(betainit~alphainit) +
geom_hline(aes(yintercept = trueval_tibble$Value[1:2], col = trueval_tibble$Parameter[1:2]), linetype = "dashed")
paths_tibble %>% ggplot(aes(x = time, y = value, col = Parameter)) + geom_line(size = 1) +
facet_grid(betainit~alphainit) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed"))
paths_tibble %>% ggplot(aes(x = time, y = value, col = Parameter)) + geom_line(size = 1) +
facet_grid(betainit~alphainit) +
geom_hline(data = trueval_tibble, aes(yintercept = Value, col = Parameter), linetype = "dashed")
trueval_tibble[1:2]
trueval_tibble[1]
trueval_tibble[, 2]
trueval_tibble[1:2, 2]
trueval_tibble[1:2,]
paths_tibble %>% ggplot(aes(x = time, y = value, col = Parameter)) + geom_line(size = 1) +
facet_grid(betainit~alphainit) +
geom_hline(data = trueval_tibble[1:2,], aes(yintercept = Value, col = Parameter), linetype = "dashed")
paths_tibble %>% ggplot(aes(x = time, y = value, col = Parameter)) + geom_line(size = 1) +
facet_grid(betainit~alphainit) +
geom_hline(data = trueval_tibble[1:2,], aes(yintercept = Value, col = Parameter), linetype = "dashed") +
facet_grid(betainit~alphainit) +
theme(axis.title = element_text(face = "bold", size = 14),
axis.text = element_text(face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 16),
legend.text = element_text(face = "bold", size =12),
strip.text = element_text(face = "bold", size = 12)) +
scale_y_continuous(breaks = seq(-3,6, by = 3))
